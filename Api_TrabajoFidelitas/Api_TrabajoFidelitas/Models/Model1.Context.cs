//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Api_TrabajoFidelitas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MotoresBritanicosEntities : DbContext
    {
        public MotoresBritanicosEntities()
            : base("name=MotoresBritanicosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<IniciarSesionUsuario_Result> IniciarSesionUsuario(string emailUsuario, string contrasenaUsuario)
        {
            var emailUsuarioParameter = emailUsuario != null ?
                new ObjectParameter("emailUsuario", emailUsuario) :
                new ObjectParameter("emailUsuario", typeof(string));
    
            var contrasenaUsuarioParameter = contrasenaUsuario != null ?
                new ObjectParameter("contrasenaUsuario", contrasenaUsuario) :
                new ObjectParameter("contrasenaUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionUsuario_Result>("IniciarSesionUsuario", emailUsuarioParameter, contrasenaUsuarioParameter);
        }
    
        public virtual int RegistrarUsuario(string contrasenaUsuario, string nombreUsuario, string emailUsuario)
        {
            var contrasenaUsuarioParameter = contrasenaUsuario != null ?
                new ObjectParameter("contrasenaUsuario", contrasenaUsuario) :
                new ObjectParameter("contrasenaUsuario", typeof(string));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var emailUsuarioParameter = emailUsuario != null ?
                new ObjectParameter("emailUsuario", emailUsuario) :
                new ObjectParameter("emailUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", contrasenaUsuarioParameter, nombreUsuarioParameter, emailUsuarioParameter);
        }
    
        public virtual int AgregarCliente(string nombreCliente, Nullable<long> telefonoCliente, string direccionCliente, string emailCliente)
        {
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("nombreCliente", nombreCliente) :
                new ObjectParameter("nombreCliente", typeof(string));
    
            var telefonoClienteParameter = telefonoCliente.HasValue ?
                new ObjectParameter("telefonoCliente", telefonoCliente) :
                new ObjectParameter("telefonoCliente", typeof(long));
    
            var direccionClienteParameter = direccionCliente != null ?
                new ObjectParameter("direccionCliente", direccionCliente) :
                new ObjectParameter("direccionCliente", typeof(string));
    
            var emailClienteParameter = emailCliente != null ?
                new ObjectParameter("emailCliente", emailCliente) :
                new ObjectParameter("emailCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarCliente", nombreClienteParameter, telefonoClienteParameter, direccionClienteParameter, emailClienteParameter);
        }
    
        public virtual ObjectResult<ConsultarClientes_Result> ConsultarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarClientes_Result>("ConsultarClientes");
        }
    
        public virtual int ActualizarCliente(Nullable<long> idCliente, string nombreCliente, Nullable<long> telefonoCliente, string direccionCliente, string emailCliente, Nullable<bool> estado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(long));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("nombreCliente", nombreCliente) :
                new ObjectParameter("nombreCliente", typeof(string));
    
            var telefonoClienteParameter = telefonoCliente.HasValue ?
                new ObjectParameter("telefonoCliente", telefonoCliente) :
                new ObjectParameter("telefonoCliente", typeof(long));
    
            var direccionClienteParameter = direccionCliente != null ?
                new ObjectParameter("direccionCliente", direccionCliente) :
                new ObjectParameter("direccionCliente", typeof(string));
    
            var emailClienteParameter = emailCliente != null ?
                new ObjectParameter("emailCliente", emailCliente) :
                new ObjectParameter("emailCliente", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCliente", idClienteParameter, nombreClienteParameter, telefonoClienteParameter, direccionClienteParameter, emailClienteParameter, estadoParameter);
        }
    
        public virtual ObjectResult<ConsultarCliente_Result> ConsultarCliente(Nullable<long> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCliente_Result>("ConsultarCliente", idClienteParameter);
        }
    }
}
